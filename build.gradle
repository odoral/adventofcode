plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.5.0.2730"
}

allprojects {
    repositories {
        mavenCentral()
    }
}

task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant source sets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}

sonarqube {
    properties {
        property "sonar.projectKey", "odoral_adventofcode"
        property "sonar.organization", "odoral"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.source", "8"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    dependencies {
        implementation 'ch.qos.logback:logback-classic:1.3.5'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'com.google.guava:guava:31.1-jre'
        compileOnly 'org.projectlombok:lombok:1.18.24'

        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

        testImplementation group: 'junit', name: 'junit', version: '4.13.2'
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
    }

    wrapper {
        gradleVersion = '7.3'
        distributionType = Wrapper.DistributionType.BIN
    }

    jacoco {
        toolVersion = "0.8.3"
    }

}